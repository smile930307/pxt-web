{"version":3,"sources":["abi/contractAddress.js","components/wallet/connectors.js","features/user/userSlice.js","abi/chainParams.js","components/header/Header.jsx","abi/routerContractAddress.js","services/auth.js","abi/nodeRewardContract.js","components/slider/SliderTwo.jsx","services/create.js","services/list.js","components/nodes/Nodes.jsx","components/mission/Mission.jsx","components/news/NewsTwo.jsx","components/calltoactions/CallToActionTwo.jsx","components/footer/Footer.jsx","views/all-home-version/HomeTwo.jsx","views/NotFound.jsx","router/Routes.js","components/ScrollToTop.jsx","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["contractAddress","injected","InjectedConnector","supportedChainIds","initialState","userSlice","createSlice","name","reducers","setUserWalletAddress","state","action","userWalletAddress","payload","setUserToken","userToken","extraReducers","builder","addCase","PURGE","actions","Params","chainId","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","Header","contractInstance","routerContractInstance","useState","click","setClick","handleClick","navbar","setNavbar","currentTokenPriceInAvax","setCurrentTokenPriceInAvax","currentTokenPriceInUSDC","setCurrentTokenPriceInUSDC","useWeb3React","account","activate","deactivate","library","dispatch","useDispatch","isOTCOpen","setIsOTCOpen","toggleModalOTC","window","addEventListener","scrollY","useEffect","setChainIdToAvax","a","id","ethereum","request","method","params","code","connect","toast","error","enable","eth","Contract","ContractAbi","RouterContractAbi","getTokenPriceInAvax","tokenPriceInAvaxWei","tokenPriceInAvax","Web3","utils","fromWei","toString","Number","getAVAXPriceInUSDC","avaxPriceInUsdc","toFixed","events","Transfer","fromBlock","event","on","console","log","undefined","getCredentials","item","fetch","headers","body","JSON","stringify","wallet_address","then","data","json","res","token","tokenAddress","routerInstance","getPathTokenForAvax","path","methods","getAmountsOut","call","result","catch","e","price","getPathAvaxForTokens","disconnect","ex","className","to","src","alt","height","items","currentClassName","offset","href","target","rel","autoStart","text","steps","roll","speed","type","onClick","slice","isOpen","onRequestClose","contentLabel","overlayClassName","closeTimeoutMS","nodeRewardContract","Slider","NODERewardManagementInstance","totalNodesCreated","setTotalNodesCreated","myNodes","setMyNodes","myRewards","setMyRewards","allowance","setAllowance","balance","setBalance","mintCount","setMintCount","isCreating","setIsCreating","showMultiMessage","store","useContext","ReactReduxContext","NODERewardManagementAbi","getNodesInfo","getBalance","getAllowance","label","r","OnClickApprove","approve","send","from","success","balanceOf","OnClickCreateNodeButton","parseInt","count","amount","getState","user","Headers","axios","get","response","fast","gasPrice","createNodeWithTokens","createNodeResult","location","reload","totalNodes","_getNodeNumberOf","_getRewardAmountOf","availableRewards","backgroundImageNum1","Math","random","backgroundImage","style","disabled","getNodeList","hasRunNodeInfo","AboutTwo","isLoading","setIsLoading","pendingRewards","setPendingRewards","claimableNumberOfNodes","setClaimableNumberOfNodes","totalPending","canClaimAll","setCanClaimAllAll","rows","setRows","dateObject","Date","isRPCOpen","setIsRPCOpen","toggleModalRPC","_isNodeOwner","getMilliseconds","numberOfNodes","preventDefault","totalClaimableNodes","myClaimableSum","nodeElement","_getNodesRewardAvailable","rewardsAllNodes","NodesApi","myClaimableArray","split","i","length","node_status","rpcURL","rpc_url","claimablePXTforNode","round","push","NameList","allowHTML","content","theme","interactive","OnClickClaimButton","cashoutAll","claimResult","class","width","Mission","Modal","setAppElement","NewsTwo","openStoryOne","open","openStoryTwo","openStoryThree","CallToActionTwo","backgroundImageNum2","Footer","getFullYear","HomeTwo","Nodes","NotFound","Routes","exact","component","ScrollToTop","isVisible","setIsVisible","toggleVisibility","pageYOffset","removeEventListener","scrollTo","top","behavior","App","AOS","init","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","persistConfig","key","version","storage","whitelist","persistedReducer","persistReducer","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","REGISTER","persistStore","ReactDOM","render","getLibrary","provider","connector","document","getElementById","classList","add"],"mappings":"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","file":"static/js/main.773f3b54.chunk.js","sourcesContent":["//const contractAddress = '0x40064CE057Fb99a5c8e34F61365cC5996E59aB57'; //v1\n//const contractAddress = '0xd821fE4915988b193FE1d4081E0cdf7bD9322EFd'; //v2 TESTNET\nconst contractAddress = '0x9e20Af05AB5FED467dFDd5bb5752F7d5410C832e'; //v2 MAINNET\nexport default contractAddress;","import { InjectedConnector } from '@web3-react/injected-connector'\n\nexport const injected = new InjectedConnector({ supportedChainIds: [43113,43114] })","import {createSlice} from '@reduxjs/toolkit'\nimport {PURGE} from 'redux-persist'\n\nconst initialState = {}\n\nexport const userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        setUserWalletAddress: (state, action) => {\n            state.userWalletAddress = action.payload\n        },\n        setUserToken: (state, action) => {\n            state.userToken = action.payload\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(PURGE, () => initialState)\n    },\n})\n\n// Action creators are generated for each case reducer function\nexport const {setUserWalletAddress, setUserToken} = userSlice.actions\n\nexport default userSlice.reducer\n","/*const Params = {\n   chainId: '0xa869',\n   chainName: 'Avalanche FUJI C-Chain',\n   nativeCurrency: {\n      name: 'Avalanche',\n      symbol: 'AVAX',\n      decimals: 18\n   },\n   rpcUrls: ['https://api.avax-test.network/ext/bc/C/rpc'],\n   blockExplorerUrls: ['https://testnet.snowtrace.io/']\n};\n*/\nconst Params = {\n     chainId: '0xa86a',\n     chainName: 'AVAX',\n     nativeCurrency: {\n       name: 'Avalanche',\n       symbol: 'AVAX',\n       decimals: 18\n     },\n     rpcUrls: ['https://api.avax.network/ext/bc/C/rpc'],\n     blockExplorerUrls: ['https://snowtrace.io/']\n   };\nexport default Params;","import React, { useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport toast from 'react-hot-toast'\r\nimport { useDispatch } from 'react-redux'\r\nimport Scrollspy from 'react-scrollspy'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Web3 from 'web3'\r\nimport contractAddress from '../../abi/contractAddress'\r\nimport RouterContractAddress from '../../abi/routerContractAddress'\r\nimport ContractAbi from '../../abi/contractAbi.json'\r\nimport RouterContractAbi from '../../abi/routerContractAbi.json'\r\nimport { injected } from '../wallet/connectors'\r\nimport { setUserWalletAddress,setUserToken } from '../../features/user/userSlice'\r\nimport Scramble from 'react-scramble'\r\nimport Params from '../../abi/chainParams'\r\nimport { auth } from '../../services/auth';\r\n\r\nimport Modal from \"react-modal\";\r\n\r\nconst Header = () => {\r\n  const [click, setClick] = useState(false)\r\n  const handleClick = () => setClick(!click)\r\n  const [navbar, setNavbar] = useState(false)\r\n  const [currentTokenPriceInAvax, setCurrentTokenPriceInAvax] = useState(0)\r\n  const [currentTokenPriceInUSDC, setCurrentTokenPriceInUSDC] = useState(0)\r\n  const { account, activate, deactivate, chainId, library } = useWeb3React()\r\n  const dispatch = useDispatch();\r\n  const ContractAddress = contractAddress\r\n  let contractInstance\r\n  let routerContractInstance\r\n  \r\n  \r\n  \r\n    //OTC MODAL\r\n    const [isOTCOpen, setIsOTCOpen] = useState(false);\r\n    function toggleModalOTC() {\r\n    \tsetIsOTCOpen(!isOTCOpen);\r\n  \t}\r\n  \r\n  const changeBackground = () => {\r\n    if (window.scrollY >= 80) {\r\n      setNavbar(true)\r\n    } else {\r\n      setNavbar(false)\r\n    }\r\n  }\r\n\r\n  window.addEventListener('scroll', changeBackground)\r\n\r\n  useEffect(async () => {\r\n    if (window.ethereum) {\r\n      if (window.ethereum.enable()) {\r\n        connect()\r\n      }\r\n      //window.ethereum.on('accountsChanged', function (accounts) {\r\n        //window.location.reload(); //DONT USE THIS IT CAUSES CRAZY REFRESH\r\n      //})\r\n\r\n      //PRE-LIVE\r\n      if(window.ethereum.chainId !== '0xa869') {\r\n      \t//setChainIdToAvax('0xa869'); //FUJI\r\n      }\r\n\r\n      //LIVE\r\n      if (window.ethereum.chainId !== '0xa86a') {\r\n        setChainIdToAvax('0xa86a') //MAINNET\r\n      }\r\n    } else {\r\n      toast.error(\r\n        'No metamask or wallet provider installed! If you are on mobile, please use your wallet browser.',\r\n      )\r\n    }\r\n    async function setChainIdToAvax(id) {\r\n      try {\r\n        await window.ethereum.request({\r\n          method: 'wallet_switchEthereumChain',\r\n          params: [{ chainId: id }],\r\n        })\r\n      } catch (switchError) {\r\n        if (switchError.code === 4902) {\r\n          try {\r\n            await window.ethereum.request({\r\n              method: 'wallet_addEthereumChain',\r\n              params: [Params],\r\n            })\r\n            connect()\r\n          } catch (addError) {\r\n            toast.error(\r\n              'Failed to add Avalanche Network to Metamask! Please add it manually.',\r\n            )\r\n          }\r\n        }\r\n        // rejected\r\n        if (switchError.code === 4001) {\r\n        }\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  useEffect(async () => {\r\n    if (library && window.ethereum.chainId === '0xa86a') {\r\n\t  contractInstance = new library.eth.Contract(ContractAbi, ContractAddress);\r\n      routerContractInstance = new library.eth.Contract(RouterContractAbi, RouterContractAddress);\r\n\r\n      const tokenPriceInAvaxWei = await getTokenPriceInAvax(\r\n        '0x9e20Af05AB5FED467dFDd5bb5752F7d5410C832e',\r\n        routerContractInstance,\r\n      )\r\n      const tokenPriceInAvax = Web3.utils.fromWei(\r\n        tokenPriceInAvaxWei.toString(),\r\n        'ether',\r\n      )\r\n      setCurrentTokenPriceInAvax(Number(tokenPriceInAvax))\r\n\r\n      let avaxPriceInUsdc = await getAVAXPriceInUSDC(\r\n        '0xb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e',\r\n        routerContractInstance,\r\n      )\r\n      avaxPriceInUsdc = Number(avaxPriceInUsdc / 1000000)\r\n      setCurrentTokenPriceInUSDC(            ( ( (avaxPriceInUsdc * tokenPriceInAvax) / 1)+0.5).toFixed(1))\r\n\r\n      contractInstance.events\r\n        .Transfer(\r\n          {\r\n            fromBlock: 'latest',\r\n          },\r\n          function (error, event) {\r\n            //console.log(\"event\");\r\n            //console.log(event);\r\n          },\r\n        )\r\n        .on('data', async function (event) {\r\n          //console.log(event) // same results as the optional callback above\r\n\r\n          const tokenPriceInAvaxWei = await getTokenPriceInAvax(\r\n            '0x9e20Af05AB5FED467dFDd5bb5752F7d5410C832e',\r\n            routerContractInstance,\r\n          )\r\n          const tokenPriceInAvax = Web3.utils.fromWei(\r\n            tokenPriceInAvaxWei.toString(),\r\n            'ether',\r\n          )\r\n          setCurrentTokenPriceInAvax(Number(tokenPriceInAvax))\r\n    \r\n          let avaxPriceInUsdc = await getAVAXPriceInUSDC(\r\n            '0xb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e',\r\n            routerContractInstance,\r\n          )\r\n          avaxPriceInUsdc = Number(avaxPriceInUsdc / 1000000)\r\n          setCurrentTokenPriceInUSDC(            ( ( (avaxPriceInUsdc * tokenPriceInAvax) / 1)+0.5).toFixed(1))\r\n        })\r\n        .on('changed', (event) => {\r\n          //remove event from local database\r\n          console.log(event) // same results as the optional callback above\r\n        })\r\n        .on('error', (error) => {\r\n          console.log(error) // same results as the optional callback above\r\n        })\r\n    }\r\n  }, [library, currentTokenPriceInAvax, currentTokenPriceInUSDC])\r\n  useEffect(() => {\r\n    if (account !== undefined) {\r\n      getCredentials();\r\n    }\r\n  },\r\n  [account]);\r\n  const getCredentials = async () => {\r\n    const res = await auth(account);\r\n    dispatch(setUserToken(res.token));\r\n    dispatch(setUserWalletAddress(account));\r\n  };\r\n  async function connect() {\r\n    try {\r\n      await activate(injected, undefined, true)\r\n      //console.log(account);\r\n    } catch (ex) {\r\n      toast.error('Unable to connect! Are you on the right network?')\r\n    }\r\n  }\r\n\r\n  // use example: const price = await getTokenPrice(\"0x40064CE057Fb99a5c8e34F61365cC5996E59aB57\");\r\n  async function getTokenPriceInAvax(tokenAddress, routerInstance) {\r\n    const path = await getPathTokenForAvax(tokenAddress)\r\n\r\n    let price = await routerInstance.methods\r\n      .getAmountsOut('1000000000000000000', path)\r\n      .call()\r\n      .then((result) => {\r\n        return result\r\n      })\r\n      .catch((e) => {\r\n        console.log({ e })\r\n        return 0\r\n      })\r\n    return price[1]\r\n  }\r\n\r\n  async function getAVAXPriceInUSDC(tokenAddress, routerInstance) {\r\n    const path = await getPathAvaxForTokens(tokenAddress)\r\n\r\n    let price = await routerInstance.methods\r\n      .getAmountsOut('1000000000000000000', path)\r\n      .call()\r\n      .then((result) => {\r\n        return result\r\n      })\r\n      .catch((e) => {\r\n        console.log({ e })\r\n        return 0\r\n      })\r\n    return price[1]\r\n  }\r\n\r\n  async function getPathAvaxForTokens(tokenAddress) {\r\n    return ['0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', tokenAddress]\r\n  }\r\n\r\n  async function getPathTokenForAvax(tokenAddress) {\r\n    return [tokenAddress, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7']\r\n  }\r\n\r\n  async function disconnect() {\r\n    try {\r\n      deactivate()\r\n    } catch (ex) {\r\n      toast.error('Unable to disconnect!')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"shane_tm_topbar\">\r\n        <div className={navbar ? 'topbar_inner opened' : 'topbar_inner'}>\r\n          <div className=\"logo\">\r\n            <NavLink to=\"/\">\r\n              <img\r\n                src=\"/img/logo/projectx-logo-3-letters-onblack.png\"\r\n                alt=\"projectx\"\r\n                height=\"60\"\r\n              />\r\n            </NavLink>\r\n          </div>\r\n          {/* End logo */}\r\n          <div className=\"menu\">\r\n            <Scrollspy\r\n              className=\"anchor_nav\"\r\n              items={[\"price\",\"home\",\"nodes\",\"mission\",\"buy\",\"otc\",\"connect\"]}\r\n              currentClassName=\"current\"\r\n              offset={-200}\r\n            >\r\n              <li>\r\n                {account && (\r\n\t               <a href=\"https://coinmarketcap.com/currencies/project-x-nodes/\" target=\"_blank\" rel=\"noreferrer\">\r\n\t\t\t\t   \t<Scramble autoStart text={\"$\"+currentTokenPriceInUSDC.toString()} steps={[{roll: 5, action: \"+\", speed: \"slow\", type: \"all\"},{action: \"-\",speed: \"slow\",type: \"random\"}]}/>\r\n\t\t\t\t   </a>\r\n\t\t\t\t)}\r\n              </li>\r\n              <li className=\"hide\">\r\n                <a href=\"#home\"></a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#nodes\">\r\n                  <Scramble\r\n                    autoStart\r\n                    text={'Nodes'}\r\n                    steps={[\r\n                      { roll: 10, action: '+', speed: 'slow', type: 'all' },\r\n                      { action: '-', speed: 'slow', type: 'random' },\r\n                    ]}\r\n                  />\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#mission\">\r\n                  <Scramble\r\n                    autoStart\r\n                    text={'Vision'}\r\n                    steps={[\r\n                      { roll: 15, action: '+', speed: 'slow', type: 'all' },\r\n                      { action: '-', speed: 'slow', type: 'random' },\r\n                    ]}\r\n                  />\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  href=\"https://traderjoexyz.com/trade?outputCurrency=0x9e20af05ab5fed467dfdd5bb5752f7d5410c832e\"\r\n                  className=\"buy\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <Scramble\r\n                    autoStart\r\n                    text={'Buy $PXT2'}\r\n                    steps={[\r\n                      { roll: 20, action: '+', speed: 'slow', type: 'all' },\r\n                      { action: '-', speed: 'slow', type: 'random' },\r\n                    ]}\r\n                  />\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  href=\"#\"\r\n                  className=\"buy\"\r\n                  rel=\"noreferrer\"\r\n                  onClick={toggleModalOTC}\r\n                >\r\n                  <Scramble\r\n                    autoStart\r\n                    text={'OTC'}\r\n                    steps={[\r\n                      { roll: 15, action: '+', speed: 'slow', type: 'all' },\r\n                      { action: '-', speed: 'slow', type: 'random' },\r\n                    ]}\r\n                  />\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  href=\"https://twitter.com/ProjectXNodes\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <img\r\n                    className=\"svg svg_white\"\r\n                    src={`/img/svg/social/twitter.svg`}\r\n                    alt=\"twitter\"\r\n                  ></img>\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  href=\"https://discord.com/invite/projectx\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <img\r\n                    className=\"svg\"\r\n                    src={`/img/svg/social/discord.svg`}\r\n                    alt=\"discord\"\r\n                  ></img>\r\n                </a>\r\n              </li>\r\n\r\n              <li>\r\n                {account ? (\r\n                  <button className=\"btn\" onClick={disconnect}>\r\n                    {'0x...' + account.slice(37)}\r\n                  </button>\r\n                ) : (\r\n                  <button className=\"btn\" onClick={connect}>\r\n                    <Scramble\r\n                      autoStart\r\n                      text={'Connect'}\r\n                      steps={[\r\n                        { roll: 20, action: '+', type: 'all' },\r\n                        { action: '-', speed: 'slow', type: 'random' },\r\n                      ]}\r\n                    />\r\n                  </button>\r\n                )}\r\n              </li>\r\n            </Scrollspy>\r\n          </div>\r\n          {/* End menu */}\r\n        </div>\r\n      </div>\r\n      {/* End shane_tm_topbar */}\r\n\r\n      {/* Start shane mobile menu */}\r\n      <div className=\"shane_tm_mobile_menu\">\r\n        <div className=\"topbar_inner\">\r\n          <div className=\"container bigger\">\r\n            <div className=\"topbar_in\">\r\n              <div className=\"logo\">\r\n                <NavLink to=\"/\">\r\n                  <img\r\n                    src=\"/img/logo/projectx-logo-3-letters-onwhite.png\"\r\n                    alt=\"projectx\"\r\n                    height=\"40\"\r\n                  />\r\n                </NavLink>\r\n              </div>\r\n              {/* End logo */}\r\n              <div className=\"my_trigger\" onClick={handleClick}>\r\n                <div\r\n                  className={\r\n                    click\r\n                      ? 'hamburger hamburger--collapse-r is-active'\r\n                      : 'hamburger'\r\n                  }\r\n                >\r\n                  <div className=\"hamburger-box\">\r\n                    <div className=\"hamburger-inner\"></div>\r\n                  </div>\r\n                </div>\r\n                {/* End hamburger menu */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={click ? 'dropdown active' : 'dropdown'}>\r\n          <div className=\"container\">\r\n            <span className=\"close_menu\" onClick={handleClick}>\r\n              close\r\n            </span>\r\n            <div className=\"dropdown_inner\">\r\n              <ul className=\"anchor_nav\">\r\n              <li>\r\n                {account && (\r\n\t               <a target=\"_blank\" href=\"https://coinmarketcap.com/currencies/project-x-nodes/\" rel=\"noreferrer\">\r\n\t\t\t\t   \t{\"$\"+currentTokenPriceInUSDC.toString(2)}\r\n\t\t\t\t   </a>\r\n\t\t\t\t)}\r\n              </li>\r\n                <li className=\"current\">\r\n                  <a href=\"#home\" onClick={handleClick}>\r\n                    Home\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#nodes\" onClick={handleClick}>\r\n                    Nodes\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#mission\" onClick={handleClick}>\r\n                    Vision\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a\r\n                    href=\"https://traderjoexyz.com/trade?outputCurrency=0x9e20af05ab5fed467dfdd5bb5752f7d5410c832e\"\r\n                    className=\"buy\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    Buy $PXT2\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a\r\n                    href=\"https://forms.gle/hf7QfxytJYRzYrn58\"\r\n                    className=\"otc\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    OTC\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a\r\n                    href=\"https://twitter.com/ProjectXNodes\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    <img\r\n                      className=\"svg svg_white\"\r\n                      src={`/img/svg/social/twitter.svg`}\r\n                      alt=\"twitter\"\r\n                    ></img>\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a\r\n                    href=\"https://discord.com/invite/projectx\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    <img\r\n                      className=\"svg\"\r\n                      src={`/img/svg/social/discord.svg`}\r\n                      alt=\"discord\"\r\n                    ></img>\r\n                  </a>\r\n                </li>\r\n\r\n                <li>\r\n                  {account ? (\r\n                    <button className=\"btn\" onClick={disconnect}>\r\n                      0x...{account.slice(37)}\r\n                    </button>\r\n                  ) : (\r\n                    <button className=\"btn\" onClick={connect}>\r\n                      Connect\r\n                    </button>\r\n                  )}\r\n                </li>\r\n\r\n                {/*\r\n                <li>\r\n                \t<br/>\r\n                    <button\r\n                      className=\"btn\"\r\n                    >\r\n                      Connect soon\r\n                    </button>\r\n                </li>\r\n                */}\r\n              </ul>\r\n\r\n              {/* End social share */}\r\n            </div>\r\n          </div>\r\n          {/* End container */}\r\n        </div>\r\n      </div>\r\n      {/* End shane mobile menu */}\r\n      \r\n      \r\n      \r\n      <Modal\r\n        isOpen={isOTCOpen}\r\n        onRequestClose={toggleModalOTC}\r\n        contentLabel=\"OTC\"\r\n        className=\"custom-modal\"\r\n        overlayClassName=\"custom-overlay\"\r\n        closeTimeoutMS={500}\r\n      >\r\n        <div className=\"shane_tm_modalbox_news\">\r\n          <button className=\"close-modal\" onClick={toggleModalOTC}>\r\n            <img src=\"/img/svg/cancel.svg\" alt=\"close icon\" />\r\n          </button>\r\n          {/* End close modal */}\r\n          <div className=\"box_inner\">\r\n            <div className=\"description_wrap scrollable\">\r\n              <div className=\"details\">\r\n                <h3 className=\"title\">\r\n                  Over the Counter Requests\r\n                </h3>\r\n              </div>\r\n              {/* End details */}\r\n              <div className=\"description\">\r\n                    \r\n                    <p>Our OTC service is managed in our <a href=\"https://discord.gg/a9bwpTCP\"  target=\"_blank\">Discord channel.</a><br/>\r\n\t\t\t\t\tPlease file a <a href=\"https://discord.gg/a9bwpTCP\"  target=\"_blank\">service desk ticket with Discord</a> to submit your request.</p>\r\n\t\t\t\t\t<h5>How do OTC trades work?</h5>\r\n\t\t\t\t\t<p>There are 2 Methods for OTC:</p>\r\n\t\t\t\t\t<h5>Method 1: OTC Swap</h5>\r\n\t\t\t\t\t<p>1. We will pair you with another individual who also wants to make a buy or sell order at approximately the same $ amount.</p> \r\n\t\t\t\t\t<p>2. To facilitate the OTC, we will be using the team wallet (verify address before sending) which is currently owned by the Team. The wallet and transactions will be shared and publicly available to both parties.</p>\r\n\t\t\t\t\t<p>3. The Buyer and seller will send agreed upon payment method and amount to the team wallet (verify address before sending) and a team member will distribute the respective funds to each party.</p>\r\n\t\t\t\t\t<p>Note: We are not charging any fees for facilitating this transaction</p>\r\n\t\t\t\t\t<h5>Method 2: Team Swap</h5>\r\n\t\t\t\t\t<p>We (X Oracle) will assist with buying or selling from our Team Wallets.</p>\r\n              </div>\r\n              {/* End description */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n    \r\n    \r\n  )\r\n}\r\n\r\nexport default Header\r\n","const RouterContractAddress = '0x60aE616a2155Ee3d9A68541Ba4544862310933d4';\nexport default RouterContractAddress;","export function auth(item) {\n   return fetch('https://nodeapi.projectx.financial/api/v1/auth/client', {\n      method: 'POST',\n      headers: {\n         'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({wallet_address: item })\n   })\n      .then(data => data.json())\n}","//const nodeRewardContract = '0xF4223720cDCCDc08A3134Fd4FAC0435aa84e5c99'; //v1 //MAINNET\n//const nodeRewardContract = '0xa6467ED210Ed51f75e43A605f8c1a38330AfA426'; //v2 //TESTNET\n//const nodeRewardContract = '0xbca020d346757Ee244c75216213A0F7C3B51F042'; //v2 //MAINNET //OLD BROKEN\nconst nodeRewardContract = '0x05c88F67fa0711b3a76ada2B6f0A2D3a54Fc775c'; //v2 //MAINNET \nexport default nodeRewardContract;","import React, { useState, useEffect,useContext } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport Scramble from \"react-scramble\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useDispatch,ReactReduxContext } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nimport { setUserWalletAddress } from \"../../features/user/userSlice\";\r\nimport ContractAbi from \"../../abi/contractAbi.json\";\r\nimport contractAddress from \"../../abi/contractAddress\";\r\nimport nodeRewardContract from \"../../abi/nodeRewardContract\";\r\nimport NODERewardManagementAbi from \"../../abi/NODERewardManagement.json\";\r\nimport { injected } from \"../wallet/connectors\";\r\nimport { setNodeApi } from \"../../services/create\";\r\n\r\nconst Slider = () => {\r\n  const [totalNodesCreated, setTotalNodesCreated] = useState(0);\r\n  const [myNodes, setMyNodes] = useState(0);\r\n  const [myRewards, setMyRewards] = useState(0);\r\n  const { account, activate, library } = useWeb3React();\r\n  const [allowance, setAllowance] = useState(0);\r\n  const [balance, setBalance] = useState(0);\r\n  const [mintCount, setMintCount] = useState(1);\r\n  const [isCreating, setIsCreating] = useState(false);\r\n  const [showMultiMessage, setShowMultiMessage] = useState(false);\r\n  const [projectAlive, setProjectAlive] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const { store } = useContext(ReactReduxContext)\r\n\r\n  let contractInstance;\r\n  let NODERewardManagementInstance;\r\n\r\n  useEffect(async () => {\r\n    if (library) {\r\n      contractInstance = new library.eth.Contract(ContractAbi, contractAddress);\r\n      NODERewardManagementInstance = new library.eth.Contract(\r\n        NODERewardManagementAbi,\r\n        nodeRewardContract\r\n      );\r\n      getNodesInfo();\r\n      await getBalance();\r\n      await getAllowance();\r\n      /*if (mintCount > 1) {\r\n          //setShowMultiMessage(true);  //THIS CAUSES ISSUES WITH 2 NODES FOR SOME REASON\r\n      } else {\r\n\t      //setShowMultiMessage(false);\r\n      }*/\r\n      const data = {\r\n        label: \"node created\",\r\n      };\r\n    }\r\n  }, [\r\n    library,\r\n    myRewards,\r\n    myNodes,\r\n    mintCount,\r\n    isCreating,\r\n    balance,\r\n    allowance,\r\n    totalNodesCreated,\r\n  ]);\r\n\r\n  const getAllowance = async () => {\r\n    await contractInstance.methods\r\n      .allowance(account, contractAddress)\r\n      .call()\r\n      .then((r) => setAllowance(r));\r\n  };\r\n\r\n  const claimFromSingleNode = async (nodeIndex) => {\r\n    return await NODERewardManagementInstance.methods\r\n      .cashoutReward(nodeIndex)\r\n      .call()\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((e) => {\r\n        console.log({ e });\r\n        return e;\r\n      });\r\n  };\r\n\r\n  const OnClickApprove = async () => {\r\n    await contractInstance.methods\r\n      .approve(\r\n        contractAddress,\r\n        \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"\r\n      )\r\n      .send({ from: account })\r\n      .then((r) => {\r\n        setAllowance(r);\r\n        toast.success(\r\n          \"Congratulations! $PXT spend approved, now you can create nodes.\"\r\n        );\r\n      })\r\n      .catch(() => {\r\n        toast.error(\r\n          \"Unabled to approve the $PXT token spend. Are you on the right wallet & network?\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const getBalance = async () => {\r\n    await contractInstance.methods\r\n      .balanceOf(account)\r\n      .call()\r\n      .then((r) => {\r\n        setBalance(r);\r\n      })\r\n      .catch(() => {\r\n        toast.error(\r\n          \"Unabled to get $PXT token balance. Are you on the right wallet & network?\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const OnClickCreateNodeButton = async () => {\r\n    let count;\r\n\r\n    if (parseInt(myNodes) == 100) {\r\n      toast.error(\r\n        \"Sorry there is a maximum of 100 nodes per wallet, if you want more nodes you will need a new wallet!\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (parseInt(mintCount) !== 0) {\r\n      count = mintCount;\r\n      //count = 1;\r\n    } else {\r\n      count = 1;\r\n      setMintCount(1);\r\n    }\r\n    setNodeApi(count,store.getState().user.userToken)\r\n    if (balance < 10000000000000000000) {\r\n      toast.error(\r\n        `Unabled to create node with ${balance/1000000000000000000} $PXT token balance. Are you on the right wallet & network?`\r\n      );\r\n    } else {\r\n      setIsCreating(true);\r\n\r\n      const gasPrice = await axios\r\n        .get(\"https://api.debank.com/chain/gas_price_dict_v2?chain=avax\")\r\n        .then((response) => {\r\n          return response.data.data.fast.price;\r\n        });\r\n\r\n      await contractInstance.methods\r\n        //.createNodeWithTokens(1)\r\n        .createNodeWithTokens(count)\r\n        .send({ from: account, gasPrice: gasPrice })\r\n        .then((createNodeResult) => {\r\n          toast.success(\"Congratulations, node created!\");\r\n          setMintCount(1);\r\n          //setNodeApi(count);\r\n          setIsCreating(false);\r\n\r\n          window.location.reload();\r\n        })\r\n        .catch((e) => {\r\n          toast.error(\r\n            \"Unabled to create node! Check your balance and try again later.\"\r\n          );\r\n          setIsCreating(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  const getNodesInfo = () => {\r\n    NODERewardManagementInstance.methods\r\n      .totalNodesCreated()\r\n      .call()\r\n      .then((totalNodes) => {\r\n        setTotalNodesCreated(totalNodes);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        toast.error(\"Unable to get totals nodes created.\");\r\n      });\r\n\r\n    NODERewardManagementInstance.methods\r\n      ._getNodeNumberOf(account)\r\n      .call()\r\n      .then((myNodes) => {\r\n        setMyNodes(myNodes);\r\n      })\r\n      .catch((e) => {\r\n        toast.error(\r\n          \"Unable to get your totals nodes created. Are you on the right wallet & network?\"\r\n        );\r\n      });\r\n\r\n    if (myNodes > 0) {\r\n      NODERewardManagementInstance.methods\r\n        ._getRewardAmountOf(account)\r\n        .call()\r\n        .then((availableRewards) => {\r\n          const r = Web3.utils.fromWei(availableRewards);\r\n          setMyRewards(Number(r));\r\n        })\r\n        .catch((e) => {\r\n          console.log({e});\r\n          toast.error(\r\n            \"Unable to get your rewards. Are you on the right wallet & network?\"\r\n          );\r\n        });\r\n    }\r\n  };\r\n\r\n  const subCount = () => {\r\n    if (mintCount > 1) {\r\n      setMintCount(parseInt(mintCount) - 1);\r\n    }\r\n  };\r\n\r\n  const addCount = () => {\r\n    //MAX NODES WARNING\r\n    if (parseInt(myNodes) == 100) {\r\n      toast.error(\r\n        \"Sorry there is a maximum of 100 nodes per wallet, if you want more nodes you will need a new wallet!\"\r\n      );\r\n    }\r\n\r\n    if (\r\n      parseInt(mintCount) < 10 &&\r\n      parseInt(mintCount) + parseInt(myNodes) < 100\r\n    ) {\r\n      setMintCount(parseInt(mintCount) + 1);\r\n    }\r\n\r\n  };\r\n\r\n  async function connect() {\r\n    try {\r\n      await activate(injected, undefined, true);\r\n      dispatch(setUserWalletAddress(account));\r\n    } catch (ex) {\r\n      toast.error(\"Unable to connect! Are you on the right network?\");\r\n    }\r\n  }\r\n\r\n  var backgroundImageNumMin = 2;\r\n  var backgroundImageNumMax = 5;\r\n  var backgroundImageNum1 = parseInt(\r\n    backgroundImageNumMin +\r\n      Math.random() * (backgroundImageNumMax - backgroundImageNumMin)\r\n  );\r\n  const backgroundImage = {\r\n    backgroundImage: `url(${\r\n      process.env.PUBLIC_URL +\r\n      \"img/slider/bgpic_\" +\r\n      backgroundImageNum1 +\r\n      \".jpg\"\r\n    })`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"slider-two\">\r\n      <div className=\"shane_tm_hero\" id=\"home\" data-style=\"one\">\r\n        <div className=\"background\">\r\n          <div className=\"image herobackground\" style={backgroundImage}></div>\r\n        </div>\r\n        {/* End .background */}\r\n\r\n        <div className=\"container\">\r\n          <div className=\"content\">\r\n            <img\r\n              src=\"/img/logo/projectx-logo-4b.png\"\r\n              id=\"slideslogo_new\"\r\n              alt=\"ProjectX\"\r\n            />\r\n            \r\n            {/*<div className=\"name_wrap\">\r\n            \t<h3>\r\n            \t<span><Scramble\r\n                  autoStart\r\n                  text=\"Standby\"\r\n                  steps={[\r\n                    { roll: 30, action: \"+\", speed: \"slow\", type: \"all\" },\r\n                    { action: \"-\", speed: \"slow\", type: \"random\" },\r\n                  ]}\r\n                /></span><br/>\r\n            \t<Scramble\r\n                  autoStart\r\n                  text=\"for v2\"\r\n                  steps={[\r\n                    { roll: 30, action: \"+\", speed: \"slow\", type: \"all\" },\r\n                    { action: \"-\", speed: \"slow\", type: \"random\" },\r\n                  ]}\r\n                />\r\n                </h3>\r\n                <span className=\"nodecreatenotice uppercase\">\r\n                     <Scramble\r\n\t                  autoStart\r\n\t                  text=\"Node creation disabled until migration\"\r\n\t                  steps={[\r\n\t                    { roll: 30, action: \"+\", speed: \"slow\", type: \"all\" },\r\n\t                    { action: \"-\", speed: \"slow\", type: \"random\" },\r\n\t                  ]}\r\n\t                />\r\n                </span>\r\n            </div>*/}\r\n\r\n            <div className=\"name_wrap\">\r\n              <h3>\r\n                <Scramble\r\n                  autoStart\r\n                  text={myNodes + \" / \"}\r\n                  steps={[\r\n                    { roll: 25, action: \"+\", speed: \"slow\", type: \"all\" },\r\n                    { action: \"-\", speed: \"slow\", type: \"random\" },\r\n                  ]}\r\n                />\r\n                <span className=\"transparent\">\r\n                  <Scramble\r\n                    autoStart\r\n                    text=\"100\"\r\n                    steps={[\r\n                      { roll: 25, action: \"+\", speed: \"slow\", type: \"all\" },\r\n                      { action: \"-\", speed: \"slow\", type: \"random\" },\r\n                    ]}\r\n                  />\r\n                </span>\r\n              </h3>\r\n            </div>\r\n\r\n            <div className=\"job_wrap\">\r\n              <span className=\"job\">\r\n                <Scramble\r\n                  autoStart\r\n                  text={totalNodesCreated + \" universal nodes initialized\"}\r\n                  steps={[\r\n                    { roll: 30, action: \"+\", speed: \"slow\", type: \"all\" },\r\n                    { action: \"-\", speed: \"slow\", type: \"random\" },\r\n                  ]}\r\n                />\r\n              </span>\r\n              <div className=\"createnodes\">\r\n                {parseInt(allowance) === 0 && account && (\r\n                  <>\r\n                    <button\r\n                      type=\"button\"\r\n                      disabled={allowance === 0}\r\n                      onClick={OnClickApprove}\r\n                      className=\"btn\"\r\n                    >\r\n                      Approve\r\n                    </button>\r\n                    <span className=\"nodecreatenotice\">\r\n                      <Scramble\r\n                        autoStart\r\n                        text=\"Phase 2: You need to approve the contract\"\r\n                        steps={[\r\n                          { roll: 30, action: \"+\", speed: \"slow\", type: \"all\" },\r\n                          { action: \"-\", speed: \"slow\", type: \"random\" },\r\n                        ]}\r\n                      />\r\n                    </span>\r\n                  </>\r\n                )}\r\n\r\n                {parseInt(allowance) > 0 && account && (\r\n                  <>\r\n                    <span className=\"nodecreatecontainer\">\r\n                      {parseInt(allowance) > 0 && (\r\n                        <button\r\n                          className=\"btn minus\"\r\n                          onClick={subCount}\r\n                          disabled={allowance === 0 || isCreating}\r\n                        >\r\n                          -\r\n                        </button>\r\n                      )}\r\n                      <button\r\n                        onClick={OnClickCreateNodeButton}\r\n                        disabled={allowance === 0 || isCreating}\r\n                        className=\"btn\"\r\n                      >\r\n                        {isCreating ? (\r\n                          <span>Creating, check wallet...</span>\r\n                        ) : (\r\n                          <span>\r\n                            Create <b>{mintCount}</b> node\r\n                            {mintCount > 1 && <span>s</span>}\r\n                          </span>\r\n                        )}\r\n                      </button>\r\n                      {parseInt(allowance) > 0 && (\r\n                        <button\r\n                          className=\"btn plus\"\r\n                          onClick={addCount}\r\n                          disabled={allowance === 0 || isCreating}\r\n                        >\r\n                          +\r\n                        </button>\r\n                      )}\r\n                      {parseInt(allowance) > 0 && !showMultiMessage && (\r\n                        <span className=\"nodecreatenotice\">\r\n                          <Scramble\r\n                            autoStart\r\n                            text=\"Phase 3: Create node for 10 $PXT2\"\r\n                            steps={[\r\n                              {\r\n                                roll: 20,\r\n                                action: \"+\",\r\n                                speed: \"slow\",\r\n                                type: \"all\",\r\n                              },\r\n                              { action: \"-\", speed: \"slow\", type: \"random\" },\r\n                            ]}\r\n                          />\r\n                        </span>\r\n                      )}\r\n                    </span>\r\n                  </>\r\n                )}\r\n                {!account && (\r\n                  <>\r\n                    <button className=\"btn\" onClick={connect}>\r\n                      <Scramble\r\n                        autoStart\r\n                        text=\"Connect\"\r\n                        steps={[\r\n                          { roll: 25, action: \"+\", speed: \"slow\", type: \"all\" },\r\n                          { action: \"-\", speed: \"slow\", type: \"random\" },\r\n                        ]}\r\n                      />\r\n                    </button>\r\n                    <span className=\"nodecreatenotice\">\r\n                      <Scramble\r\n                        autoStart\r\n                        text=\"Phase 1: You need to connect your wallet\"\r\n                        steps={[\r\n                          { roll: 25, action: \"+\", speed: \"slow\", type: \"all\" },\r\n                          { action: \"-\", speed: \"slow\", type: \"random\" },\r\n                        ]}\r\n                      />\r\n                    </span>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"shane_tm_down loaded\">\r\n              <div className=\"line_wrapper\">\r\n                <div className=\"line\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* End .content */}\r\n        </div>\r\n        {/* End .container */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","export function setNodeApi(amount,token) {\n   return fetch('http://localhost:3001/api/v1/nodes/create', {\n      method: 'POST',\n      headers: new Headers({\n         'Authorization': 'Bearer ' + token,\n         'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify({ amount })\n   }).then(data => data.json());\n}","export function getNodeList(token) {\n  return fetch('https://nodeapi.projectx.financial/api/v1/nodes/client',{\n    method: 'get', \n    headers: new Headers({\n        'Authorization': 'Bearer '+token, \n        'Content-Type': 'application/json'\n    })\n   }).then(data => data.json())\n }","import React, {useEffect, useState,useContext} from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport ContractAbi from \"../../abi/contractAbi.json\";\r\nimport contractAddress from \"../../abi/contractAddress\";\r\nimport nodeRewardContract from \"../../abi/nodeRewardContract\";\r\nimport {useWeb3React} from \"@web3-react/core\";\r\nimport toast from \"react-hot-toast\";\r\nimport NODERewardManagementAbi from \"../../abi/NODERewardManagement.json\";\r\nimport Web3 from \"web3\";\r\nimport axios from 'axios';\r\nimport { ReactReduxContext } from 'react-redux'\r\nimport { getNodeList } from '../../services/list';\r\nimport { getNodeStatus } from '../../services/node_status';\r\n// import NodeList from '../../assets/nodes.json';\r\nimport NameList from '../../assets/nebulas_shuffled.json';\r\n\r\n//RPC\r\nimport Tippy from '@tippyjs/react';\r\nimport 'tippy.js/dist/tippy.css'; // optional\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Modal from \"react-modal\";\r\n\r\n\r\nlet hasRunNodeInfo = false;\r\n//const dateObject = new Date();\r\n\r\nconst AboutTwo = () => {\r\n    const {account, library} = useWeb3React();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [pendingRewards, setPendingRewards] = useState(0);\r\n    const [claimableNumberOfNodes, setClaimableNumberOfNodes] = useState(0);\r\n    const [myNodes, setMyNodes] = useState(0);\r\n    const [totalPending, setTotalPending] = useState(0);\r\n    const [canClaimAll, setCanClaimAllAll] = useState(false);\r\n    const [rows, setRows] = useState([]);\r\n    const { store } = useContext(ReactReduxContext)\r\n    let NODERewardManagementInstance;\r\n    let contractInstance;\r\n    const dateObject = new Date();\r\n    \r\n    //RPC MODAL\r\n    const [isRPCOpen, setIsRPCOpen] = useState(false);\r\n    function toggleModalRPC() {\r\n    \tsetIsRPCOpen(!isRPCOpen);\r\n  \t}\r\n    \r\n    //SETTING\r\n    const dailyReward = 0.17;\r\n\r\n    useEffect(async () => {\r\n        if (library) {\r\n            contractInstance = new library.eth.Contract(ContractAbi, contractAddress);\r\n            NODERewardManagementInstance = new library.eth.Contract(\r\n                NODERewardManagementAbi,\r\n                nodeRewardContract\r\n            );\r\n            await getNodesInfo();\r\n        }\r\n    }, [\r\n        library,\r\n        isLoading,\r\n        pendingRewards,\r\n        myNodes,\r\n        canClaimAll,\r\n        rows,\r\n        claimableNumberOfNodes,\r\n        totalPending\r\n    ]);\r\n\r\n    // const getNodeListApi = async () => {\r\n    //     const nodes = await getNodeList();\r\n    //     setNodesList(getNodeList());\r\n    //     console.log(nodesList);\r\n    // }\r\n\r\n    /*const claimFromSingleNode = async (nodeIndex) => {\r\n        return await contractInstance.methods\r\n            .cashoutReward(nodeIndex)\r\n            .send({from: account})\r\n            .then((result) => {\r\n                // todo refresh all available button\r\n                setClaimableNumberOfNodes(claimableNumberOfNodes - 1)\r\n                return result;\r\n            })\r\n            .catch((e) => {\r\n                console.log({e});\r\n                if (pendingRewards > 0) toast.error(\"Unable to get your reward data.\");\r\n                return e;\r\n            });\r\n    }*/\r\n\r\n    const getNodesInfo = async () => {\r\n    \tlet isOwner = await NODERewardManagementInstance.methods\r\n            ._isNodeOwner(account)\r\n            .call()\r\n            .then((res) => {\r\n                return res\r\n            })\r\n            .catch((e) => {\r\n                console.log({e});\r\n                return false;\r\n            });\r\n        if (!isOwner) {\r\n        \treturn false;\r\n    \t}\r\n    \t\t\t\r\n\t    if (!hasRunNodeInfo) {\r\n\t\t\thasRunNodeInfo = true;\r\n\t\t\tlet RunNodeInfoAt = dateObject.getMilliseconds();\r\n\t\t\t\r\n\t        const numberOfNodes = await NODERewardManagementInstance.methods\r\n                ._getNodeNumberOf(account)\r\n\t            .call()\r\n\t            .then(async (myNodes) => {\r\n\t                return myNodes;\r\n\t            }).catch((e) => {\r\n\t                return -1;\r\n\t                console.log({e});\r\n\t                toast.error(\r\n\t                    \"Unable to get your node data, Are you on the right wallet & network?\"\r\n\t                );\r\n\t            });\r\n\t            \r\n\t\r\n\t        if (numberOfNodes > 0) {\r\n\t            setMyNodes(numberOfNodes);\r\n\t            let totalClaimableNodes = 0;\r\n\t\t\t\tvar myClaimableSum = 0;\r\n\t\t\t\tconst nodeElement = [];\r\n\t\r\n\t            //Pending Rewards (unclaimable yet) //NOT NEEDED\r\n\t\t        /*const rewardsPendingAllNodes = await NODERewardManagementInstance.methods\r\n\t                ._getNodesPendingClaimableAmount(account)\r\n\t                .call()\r\n\t                .then((amount) => {\r\n\t                    return amount\r\n\t                })\r\n\t                .catch((e) => {\r\n\t                    console.log({e});\r\n\t                    //console.log(\"too early to claim\");\r\n\t                });\r\n\t            const myPendingArray = rewardsPendingAllNodes.split(\"#\");\r\n\t            var myPendingSum = myPendingArray.reduce(function(a, b){\r\n\t\t\t\t\treturn Number(a) + Number(b);\r\n\t    \t\t}, 0);\r\n\t            console.log('Pending rewards (not claimable yet):'+myPendingSum);\r\n\t            */\r\n\t            \r\n\t            //RPC CLICK\r\n\t            function clickRPC(e) {\r\n\t\t\t\t\te.preventDefault();\r\n                    //navigator.clipboard.writeText(NodesApi[0].rpc_url);\r\n\t\t\t\t\ttoast.success(\r\n\t                    \"RPC launching soon, watch this space!\"\r\n\t                );\r\n  \t\t\t\t}\r\n\r\n\t            //GET CLAIMABLE\r\n\t            const rewardsAllNodes = await NODERewardManagementInstance.methods\r\n\t                ._getNodesRewardAvailable(account)\r\n\t                .call()\r\n\t                .catch((e) => {\r\n\t                    console.log({e});\r\n\t                });\r\n                const token = store.getState().user.userToken;\r\n                const NodesApi = await getNodeList(token);\r\n                //console.log(NodesApi);\r\n\t            if (rewardsAllNodes) {\r\n\t\t            const myClaimableArray = rewardsAllNodes.split(\"#\");\r\n\t\t            for (let i = 0; i < myClaimableArray.length; i++) {\r\n\t\t\t            let node_status = false;\r\n\t\t\t            let rpcURL = \"RPC URL coming soon for this node\";\r\n\t\t\t            if (NodesApi[i]) {\r\n\t\t\t\t            node_status = true; //await getNodeStatus(NodesApi[i].rpc_url);\r\n\t\t\t            \trpcURL = \"https://avax-rpc.projectx.financial/\"+NodesApi[i].rpc_url;\r\n\t\t\t            }\r\n\t\t\t            \r\n\t\t                myClaimableSum += Number(myClaimableArray[i]);\r\n\t\t                const claimablePXTforNode = Web3.utils.fromWei(myClaimableArray[i].toString(), 'ether');\r\n                        const rand = Math.round(Math.random() * (3 - 0) + 0);\r\n\t\t                if (Number(myClaimableArray[i]) > 0.0) {\r\n\t\t\t                if (claimablePXTforNode >= 0) {\r\n\t\t                    \ttotalClaimableNodes ++;\r\n\t\t                    }\r\n\t\t                    \r\n\t\t                    nodeElement.push(\r\n\t\t                        <tr key={i}>\r\n\t\t                            <td>{NameList[i]}</td>\r\n\t\t                            <td>{Number(claimablePXTforNode).toFixed(3)} $PXT2</td>\r\n\t\t                            {/*<span className=\"indent noderow\">{((100 * ((hours) * rPM)) / pxtPerNode).toFixed(1)}% ROI</span>*/}\r\n\t\t                            <td><Tippy allowHTML={true} content={rpcURL} theme={\"blue\"} interactive={true}><span className=\"secondarycolour_text_blue pointer\" onClick={toggleModalRPC}>RPC <i className=\"fa fa-info-circle\"></i> {node_status ? <i className=\"fa fa-check-circle\"></i> : <i className=\"fa fa-times-circle\"></i>}</span></Tippy></td>\r\n\t\t                            {/*<td>Frankfurt</td>*/}\r\n\t\t                            <td>READY</td>\r\n\t\t                            {/*<button className=\"btn nodeclaim\" onClick={async (e) => {await claimFromSingleNode(i)}}>CLAIM</button>*/}\r\n\t\t                        </tr>\r\n\t\t                    );\r\n\t\t                } else {\r\n\t\t                    nodeElement.push(\r\n\t\t                        <tr key={i}>\r\n\t\t                            <td>{NameList[i]}</td>\r\n\t\t                            <td>{Number(claimablePXTforNode).toFixed(3)} $PXT</td>\r\n\t\t                            {/*<span className=\"indent noderow\">{((100 * ((hours) * rPM)) / pxtPerNode).toFixed(1)}% ROI</span>*/}\r\n\t\t                            <td><Tippy allowHTML={true} content={rpcURL} theme={\"blue\"} interactive={true}><span className=\"secondarycolour_text_blue pointer\" onClick={toggleModalRPC}>RPC <i className=\"fa fa-info-circle\"></i> {node_status ? <i className=\"fa fa-check-circle\"></i> : <i className=\"fa fa-times-circle\"></i>}</span></Tippy></td>\r\n\t\t                            {/*<td>Frankfurt</td>*/}\r\n\t\t                            <td>WAIT 1HR</td>\r\n\t\t                            {/*<button className=\"btn nodeclaim\" disabled>ENERGISING</button>*/}\r\n\t\t                        </tr>\r\n\t\t                    );\r\n\t\t                }\r\n\t\t            }\r\n\t\t        }\r\n\t\r\n\t            //BUILD TABLE\r\n\t            setRows(nodeElement);\r\n\t\r\n\t            //DISPLAY REWARDS TOTAL\r\n\t            const r = Web3.utils.fromWei(myClaimableSum.toString(), 'ether');\r\n\t            setPendingRewards(Number(r));\r\n\t\r\n\t            //ENABLE CLAIM BUTTON?\r\n\t            setClaimableNumberOfNodes(totalClaimableNodes);\r\n\t            //console.log(totalClaimableNodes + ' '+ numberOfNodes);\r\n\t            //if (Number(totalClaimableNodes) === Number(numberOfNodes)) {\r\n\t            //if (Number(totalClaimableNodes) > 0 && r >= 0.17) {\r\n\t\t        if (Number(totalClaimableNodes) > 0) {\r\n\t                setCanClaimAllAll(true);\r\n\t            }\r\n\t\r\n\t            //DEBUG\r\n\t            console.log('Claimable Nodes:'+totalClaimableNodes+' and Claimable Rewards:'+myClaimableSum);\r\n\t            //console.log('Number of node:'+numberOfNodes);\r\n\t        }\r\n        }\r\n    };\r\n\r\n\r\n    const getNodeCreationTime = async () => {\r\n        const res = await NODERewardManagementInstance.methods\r\n            ._getNodesCreationTime(account)\r\n            .call()\r\n            .then((creationTime) => {\r\n                return creationTime.split('#');\r\n            })\r\n            .catch((e) => {\r\n                console.log({e});\r\n                if (pendingRewards > 0) toast.error(\"Unable to get your reward data.\");\r\n            });\r\n        return res;\r\n    };\r\n\r\n\r\n    const getRewardsPerMinute = async () => {\r\n        const res = await NODERewardManagementInstance.methods\r\n            .rewardsPerMinute()\r\n            .call()\r\n            .then((creationTime) => {\r\n                return Web3.utils.fromWei(creationTime);\r\n            })\r\n            .catch((e) => {\r\n                console.log({e});\r\n                if (pendingRewards > 0) toast.error(\"Unable to get your reward data.\");\r\n            });\r\n        return res;\r\n    };\r\n\r\n\r\n    const OnClickClaimButton = async () => {\r\n\r\n        /*\r\n        const node = '{\"name\":\"YOUR_NAME\",\"description\":\"YOUR_DESCRIPTION\"}'\r\n        const response = await axios.post('https://api.chainstack.com/v1', node, {\r\n            headers: {\r\n            'HDR_CT': 'application/json',\r\n            'HDR_AUTH': 'Authorization: Bearer gozjNHMX.JV6ZFDLbKHnb0b8KK9jHFlriSBx70uMz'\r\n            }}).then((response) => {\r\n                return response.data.data.normal.price;\r\n            });\r\n\r\n        console.log(response)\r\n        */\r\n\r\n        const gasPrice = await axios.get('https://api.debank.com/chain/gas_price_dict_v2?chain=avax')\r\n            .then((response) => {\r\n\t            //console.log(\"gas: \" + response.data.data.fast.price + \" \" + parseInt(response.data.data.fast.price - ((response.data.data.fast.price/100)*1)));\r\n                return parseInt(response.data.data.fast.price);\r\n            });\r\n\r\n        setIsLoading(true);\r\n        contractInstance.methods\r\n            .cashoutAll()\r\n            .send({from: account, gasPrice: gasPrice})\r\n            .then((claimResult) => {\r\n                toast.success(\"Congratulations! $PXT claimed successfully.\");\r\n                setPendingRewards(0);\r\n                setIsLoading(false);\r\n            })\r\n            .catch((e) => {\r\n                console.log({e})\r\n                /*\r\n                toast.error(\r\n                  \"Unable to claim your rewards, Are you on the right wallet & network?\"\r\n                );\r\n                */\r\n                setIsLoading(false);\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"shane_tm_section\" id=\"nodes\">\r\n                <div className=\"shane_tm_about bg_black\">\r\n                    <div className=\"container\">\r\n                        <div className=\"about_inner\">\r\n                            <div className=\"left\">\r\n                                {myNodes > 0 && <h5>{myNodes} nodes activated:</h5>}\r\n                                {myNodes > 0 ? (\r\n                                    //<div id=\"nodelist\"> {rows} </div>\r\n                                    <div id=\"nodelist\">\r\n\t                                    <table id=\"nodelist_table\">\r\n\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n                                                {rows}\r\n                                            </tbody>\r\n\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n                                ) : (\r\n                                    <span className=\"indent\">\r\n\t\t\t\t\t\t\t\t\t\tNo nodes initialized. <a href=\"#home\">Create some now</a>\r\n\t\t\t\t\t\t\t\t\t\t<p>Maybe your wallet is not connected?</p>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                )}\r\n                                \r\n                               <br/>\r\n                               You can track rewards for multiple wallets <a href=\"https://my.projectx.financial/\" target=\"_blank\" rel=\"noreferrer\">here</a>\r\n                            </div>\r\n                            \r\n                            {/* End left */}\r\n\r\n                            <div className=\"right\">\r\n                                <div className=\"shane_tm_title\" data-aos=\"fade-up\" data-aos-duration=\"1200\">\r\n                                    <h3>{pendingRewards.toFixed(2)} $PXT2<span>claimable reward</span></h3>\r\n                                </div>\r\n                                <div className=\"text\" data-aos=\"fade-up\" data-aos-duration=\"1200\">\r\n                                    <p>Daily rewards: <span className=\"secondarycolour_text\">{dailyReward} $PXT2</span></p>\r\n                                    <p>Reward interval: <span className=\"secondarycolour_text\">1hr</span></p>\r\n                                    <p>Node cost: <span className=\"secondarycolour_text\">10 $PXT2</span></p>\r\n                                    <p>Claim tax: <span className=\"secondarycolour_text\">0%</span></p>\r\n                                    <p>Sell tax: <span className=\"secondarycolour_text\">18%</span></p>\r\n                                    <p>Ensure you are at: <a href=\"https://my.projectx.financial\"  rel=\"noreferrer\">https://projectx.financial</a></p>\r\n\t\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t\t\r\n                                    {canClaimAll ? (\r\n                                        <button className=\"btn\" onClick={OnClickClaimButton}>CLAIM ALL NODES</button>\r\n                                    ) : (\r\n                                        <button className=\"btn\" disabled onClick={OnClickClaimButton}>Please wait {claimableNumberOfNodes} of {myNodes} ready</button>\r\n                                    )}\r\n                                 \r\n                                    {myNodes > 0 && <span><br/><br/><p><i class=\"fa fa-exclamation-triangle\"></i> There are intermittent claim and node create issues.<br/>If you get high gas (above 0.002 AVAX per node), please reject and try later. The issue is being investigated.</p></span>}\r\n                                </div>\r\n                                \r\n                                {/*<div data-aos=\"fade-up\" data-aos-duration=\"1200\">\r\n                                \tClaim disabled until V2 migration complete<br/>See <a href=\"https://discord.com/invite/projectx\" rel=\"noreferrer\">Discord</a> for further details\r\n                                </div>*/}\r\n                                \r\n                            </div>\r\n                            {/* End right */}\r\n                        </div>\r\n                    </div>\r\n                    {/* End container */}\r\n                </div>\r\n            </div>\r\n            \r\n            <Modal\r\n\t            isOpen={isRPCOpen}\r\n\t            onRequestClose={toggleModalRPC}\r\n\t            contentLabel=\"RPC\"\r\n\t            className=\"custom-modal\"\r\n\t            overlayClassName=\"custom-overlay\"\r\n\t            closeTimeoutMS={500}\r\n\t          >\r\n\t            <div className=\"shane_tm_modalbox_news\">\r\n\t              <button className=\"close-modal\" onClick={toggleModalRPC}>\r\n\t                <img src=\"/img/svg/cancel.svg\" alt=\"close icon\" />\r\n\t              </button>\r\n\t              {/* End close modal */}\r\n\t              <div className=\"box_inner\">\r\n\t                <div className=\"description_wrap scrollable\">\r\n\t                  <img src=\"/img/news/rpc-avax.png\" alt=\"thumb\" width=\"500\"/><br/>\r\n\t                  <div className=\"details\">\r\n\t                    <h3 className=\"title\">\r\n\t                      ProjectX RPC\r\n\t                    </h3>\r\n\t                  </div>\r\n\t                  {/* End details */}\r\n\t                  <div className=\"description\">\r\n\t                  \t\t<p>RPC (Remote Procedure Call) Endpoints are now live for each and every node in the Project X system, deployed to over 79,000 nodes. This is a HUGE achievement in our roadmap!</p>\r\n\t\t\t\t\t\t\t<h5>What is RPC?</h5>\r\n\t\t\t\t\t\t\t<p>Every node needs a way to communicate with the blockchain. This connection between the node and blockchain is called RPC. To set this up we need our own routing system that can be linked to these RPCs, and each node has its unique URL.</p>\r\n\t\t\t\t\t\t\t<h5>Why RPC?</h5>\r\n\t\t\t\t\t\t\t<p>Until this point, communication was going through AVAX/MetaMask's public routing. Now each of the nodes in Project X has a private connection using its unique RPC URL (accessed through the Project X website). This should ideally help in potentially reducing transaction fees and provide a faster transaction time and better wallet performance.</p>\r\n\t\t\t\t\t\t\t<p>With a successful rollout of RPC Endpoints across all the nodes currently in the Project X system, we can say Project X has officially expanded its footprint into Nodes-as-a-Service (NaaS).</p>\r\n\t\t\t\t\t\t\t<h5>How do I use them?</h5>\r\n\t\t\t\t\t\t\t<p></p>\r\n\t\t\t\t\t\t\t<p>1. Copy the endpoint <strong>URL</strong> by hovering over the blue RPC link on your node.</p>\r\n\t\t\t\t\t\t\t<p>2. Go into your MetaMask <strong>SETTINGS {'>'} NETWORKS {'>'} AVALANCHE MAINNET</strong>, and <strong>edit</strong> the URL as the RPC endpoint. If you already have an existing URL set up, <strong>replace</strong> it with the <strong>URL</strong> you copied.</p>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<p>Thank you everyone for your constant support and keep our community growing!</p>\r\n\t\t\t\t\t\t\t<p>We're just getting started! x</p>\r\n\t\t\t\t\t\t\t{/*<h5>How to set up RPC?</h5>*/}\r\n\t                  </div>\r\n\t                  {/* End description */}\r\n\t                </div>\r\n\t              </div>\r\n\t            </div>\r\n\t          </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AboutTwo;\r\n","import React from \"react\";\r\n\r\nconst Mission = () => {\r\n  return (\r\n    <>\r\n      <div className=\"shane_tm_section\" id=\"mission\">\r\n        <div className=\"shane_tm_mission bg_white\">\r\n          <div className=\"container\">\r\n            <div className=\"about_inner\">\r\n            \r\n              <div className=\"left\">\r\n                <div\r\n                  className=\"shane_tm_title\"\r\n                  data-aos=\"fade-up\"\r\n                  data-aos-duration=\"1200\"\r\n                >\r\n                  <h3 className=\"primarycolour_text\">Vision</h3>\r\n                  <p>\r\n                   Sustainable, trustworthy and transparent cryptocurrency-based passive income, allowing anyone to build supplementary wealth.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              {/* End left */}\r\n\r\n              <div className=\"right\">\r\n              <div\r\n                  className=\"shane_tm_title\"\r\n                  data-aos=\"fade-up\"\r\n                  data-aos-duration=\"1200\"\r\n                >\r\n                <h3 className=\"primarycolour_text\">Mission</h3>\r\n                <p>\r\n                   Design, build, and operate a healthy and sustainable passive income cryptocurrency, with a highly involved, inclusive and ethical community of global supporters... you, the <b>'X-Collective'</b>.\r\n                </p>\r\n                </div>\r\n              \r\n              </div>\r\n              {/* End right */}\r\n              \r\n            </div>\r\n          </div>\r\n          {/* End container */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Mission;","import React, {} from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst NewsTwo = () => {\r\n\r\n  function openStoryOne() {\r\n    window.open(\r\n      \"https://projectxnodes.medium.com/welcome-to-project-x-9f176d7b760f\",\r\n      \"_blank\",\r\n      \"noopener,noreferrer\"\r\n    );\r\n  }\r\n  function openStoryTwo() {\r\n    /*window.open(\r\n      \"https://twitter.com/avalancheavax?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor\",\r\n      \"_blank\",\r\n      \"noopener,noreferrer\"\r\n    );*/\r\n  }\r\n  function openStoryThree() {\r\n    window.open(\r\n      \"https://www.assuredefi.io/projects/projectx/\",\r\n      \"_blank\",\r\n      \"noopener,noreferrer\"\r\n    );\r\n  }\r\n  \r\n  \r\n  return (\r\n    <div className=\"shane_tm_section\" id=\"news\">\r\n      <div className=\"shane_tm_news bg_white\">\r\n        <div className=\"container\">\r\n          {/* End shane_tm_title */}\r\n          <div className=\"news_list\">\r\n            <ul>\r\n              <li data-aos=\"fade-right\" data-aos-duration=\"1200\">\r\n                <div className=\"list_inner\">\r\n                  <div className=\"image\" onClick={openStoryOne}>\r\n                    <img src=\"/img/placeholders/4-3.jpg\" alt=\"thumb\" />\r\n                    <div\r\n                      className=\"main\"\r\n                      style={{\r\n                        backgroundImage: `url(${\r\n                          process.env.PUBLIC_URL + \"img/news/medium.jpg\"\r\n                        })`,\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                  {/* End image */}\r\n\r\n                  <div className=\"details\" onClick={openStoryOne}>\r\n                    <h3 className=\"title\">Vision</h3>\r\n                  </div>\r\n                  {/* End details */}\r\n                </div>\r\n              </li>\r\n              {/* End single blog */}\r\n\r\n              <li\r\n                data-aos=\"fade-right\"\r\n                data-aos-duration=\"1200\"\r\n                data-aos-delay=\"150\"\r\n              >\r\n                <div className=\"list_inner\">\r\n                  <div className=\"image\" onClick={openStoryTwo}>\r\n                    <img src=\"/img/placeholders/4-3.jpg\" alt=\"thumb\" />\r\n                    <div\r\n                      className=\"main\"\r\n                      style={{\r\n                        backgroundImage: `url(${\r\n                          process.env.PUBLIC_URL + \"img/news/newlogo.png\"\r\n                        })`,\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                  {/* End image */}\r\n\r\n                  <div className=\"details\">\r\n                    <h3 className=\"title\" onClick={openStoryTwo}>\r\n                      We've got a new logo!\r\n                    </h3>\r\n                  </div>\r\n                  {/* End details */}\r\n                </div>\r\n                {/* End list inner */}\r\n              </li>\r\n              {/* End single blog */}\r\n\r\n              <li\r\n                data-aos=\"fade-right\"\r\n                data-aos-duration=\"1200\"\r\n                data-aos-delay=\"300\"\r\n              >\r\n                <div className=\"list_inner\">\r\n                  <div className=\"image\" onClick={openStoryThree}>\r\n                    <img src=\"/img/placeholders/4-3.jpg\" alt=\"thumb\" />\r\n                    <div\r\n                      className=\"main\"\r\n                      style={{\r\n                        backgroundImage: `url(${\r\n                          process.env.PUBLIC_URL + \"img/news/assure_kyc.png\"\r\n                        })`,\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n\r\n                  <div className=\"details\">\r\n                    <h3 className=\"title\" onClick={openStoryThree}>\r\n                      KYC Approved by Assure\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n\r\n              {/* End single blog */}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsTwo;\r\n","import React, {} from \"react\";\r\n\r\nconst CallToActionTwo = () => {\r\n\t\r\n  var backgroundImageNumMin = 2;\r\n  var backgroundImageNumMax = 5;\r\n  var backgroundImageNum2 = parseInt(backgroundImageNumMin + (Math.random() * (backgroundImageNumMax-backgroundImageNumMin)));\r\n  const backgroundImage = { backgroundImage: `url(${process.env.PUBLIC_URL + \"img/slider/bgpic_\" + backgroundImageNum2 + \".jpg\"})` };\r\n  \r\n  return (\r\n    <div className=\"shane_tm_section\" id=\"contact\">\r\n      <div className=\"shane_tm_talk bg_image_props\" style={backgroundImage}>\r\n        {/* End background */}\r\n\r\n        <div className=\"talk_inner\">\r\n          <div className=\"text\" data-aos=\"fade-up\" data-aos-duration=\"1200\">\r\n            <h3>Passive income for all entities</h3>\r\n          </div>\r\n        </div>\r\n        {/* End talk_inner */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CallToActionTwo;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  const year = new Date().getFullYear();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"shane_tm_section\">\r\n        <div className=\"shane_tm_copyright\">\r\n          <div className=\"container\">\r\n            <div className=\"inner\">\r\n              <p>\r\n                <a target=\"_blank\" href=\"https://coinmarketcap.com/currencies/project-x-nodes/\" rel=\"noreferrer\">CoinMarketCap</a> \r\n                &nbsp; | &nbsp; \r\n                <a target=\"_blank\" href=\"https://twitter.com/ProjectXNodes\" rel=\"noreferrer\">Twitter</a> \r\n                &nbsp; | &nbsp; \r\n                <a target=\"_blank\" href=\"https://discord.com/invite/projectx\" rel=\"noreferrer\">Discord</a> \r\n                &nbsp; | &nbsp; \r\n                <a target=\"_blank\" href=\"https://discord.com/invite/projectx\" rel=\"noreferrer\">Support</a>\r\n                &nbsp; | &nbsp; \r\n                <a target=\"_blank\" href=\"https://forms.gle/hf7QfxytJYRzYrn58\" rel=\"noreferrer\">OTC Trade</a>\r\n                <br/>\r\n                <a target=\"_blank\" href=\"https://dexscreener.com/avalanche/0x9e20Af05AB5FED467dFDd5bb5752F7d5410C832e\" rel=\"noreferrer\">DEX SCREENER 0x9e20Af05AB5FED467dFDd5bb5752F7d5410C832e</a>\r\n                <br/>\r\n                \r\n             \r\n\t\t\t\t<a href=\"https://www.avax.network/\" target=\"_blank\" rel=\"noreferrer\"><img alt=\"Powered by Avalanche\" src=\"/img/svg/poweredbyavalanche.svg\" height=\"38\" width=\"113\" className=\"poweredbyavalanche\"/></a>\r\n\t\t\t\t<a href=\"https://www.assuredefi.io/projects/projectx/\" target=\"_blank\" rel=\"noreferrer\"><img src=\"/img/kyc/Assure_TransBG_White_crop.png\" className=\"footer_kyc\" alt=\"KYC by Assure DeFi\"/></a>\r\n              \r\n              </p>\r\n              <br/>\r\n              <p>© 2022 All rights reserved. (V2.51)</p>\r\n              <p className=\"smallprint\">While cryptocurrencies have the potential for great rewards, they may not be suitable for all investors. Before deciding to trade any cryptocurrency or DeFi protocol you should carefully consider your investment objectives, level of experience, and risk appetite. The information provided on this website does not constitute investment advice, financial advice, trading advice, or any other sort of advice, and you should not treat any of the website's content as such. ProjectX will not accept liability for any loss or damage, including without limitation to, any loss of profit, which may arise directly or indirectly from use of or reliance on such information.</p>\r\n            </div>\r\n            \r\n            {/* End inner */}\r\n          </div>\r\n        </div>\r\n        {/* End shane_tm_copyright */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport Header from \"../../components/header/Header\";\r\nimport Slider from \"../../components/slider/SliderTwo\";\r\nimport Nodes from \"../../components/nodes/Nodes\";\r\nimport Mission from \"../../components/mission/Mission\";\r\n//import Faq from \"../../components/faq/Faq\";\r\nimport News from \"../../components/news/NewsTwo\";\r\nimport CallToAction from \"../../components/calltoactions/CallToActionTwo\";\r\nimport Footer from \"../../components/footer/Footer\";\r\n\r\nconst HomeTwo = () => {\r\n\r\n\t  return (\r\n\t    <div className=\"home-two\">\r\n\t      <Header />\r\n\t      {/* End Header Section */}\r\n\t\r\n\t      <Slider />\r\n\t      {/* End Slider Section */}\r\n\t\r\n\t      <Nodes />\r\n\t      {/* End About Section */}\r\n\t\r\n\t      <Mission />\r\n\t      {/* End Portfolio Section */}\r\n\t      \r\n\t      <News />\r\n\t      {/* End Blog Section */}\r\n\t\r\n\t      <CallToAction />\r\n\t      {/* End CallToAction */}\r\n\t\r\n\t      <Footer />\r\n\t      {/* End Footer Section */}\r\n\t    </div>\r\n\t  );\r\n};\r\n\r\nexport default HomeTwo;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"shane_tm_intro shane_error_page\">\r\n      <div\r\n        className=\"hero\"\r\n        style={{\r\n          backgroundImage: `url(${\r\n            process.env.PUBLIC_URL + \"img/patterns/1.png\"\r\n          })`,\r\n        }}\r\n      >\r\n        <div className=\"content\">\r\n          <h1>404!</h1>\r\n          <p>The page you are looking for could not be found.</p>\r\n\r\n          <Link className=\"white-fill-bg btn-outline\" to=\"/\">\r\n            BACK TO HOME\r\n          </Link>\r\n          {/* End purchase_button */}\r\n        </div>\r\n      </div>\r\n      {/* End .hero */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport HomeTwo from \"../views/all-home-version/HomeTwo\";\r\nimport NotFound from \"../views/NotFound\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomeTwo} />\r\n          <Route path=\"/home-two\" component={HomeTwo} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function ScrollToTop() {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  // Top: 0 takes us all the way back to the top of the page\r\n  // Behavior: smooth keeps it smooth!\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Button is displayed after scrolling for 500 pixels\r\n    const toggleVisibility = () => {\r\n      if (window.pageYOffset > 500) {\r\n        setIsVisible(true);\r\n      } else {\r\n        setIsVisible(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", toggleVisibility);\r\n\r\n    return () => window.removeEventListener(\"scroll\", toggleVisibility);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {isVisible && (\r\n        <div\r\n          onClick={scrollToTop}\r\n          className=\"scroll_up\"\r\n          data-aos=\"fade-left\"\r\n          data-aos-duration=\"1200\"\r\n        >\r\n          <img src=\"/img/arrow-up.svg\" alt=\"scroll up\" />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\nimport Routes from \"./router/Routes\";\nimport ScrollToTop from \"./components/ScrollToTop\";\nimport { Toaster } from 'react-hot-toast';\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\n\nconst App = () => {\n  useEffect(() => {\n    AOS.init();\n  }, []);\n  return (\n    <div className=\"shane_tm_all_wrap\">\n      <Toaster />\n      <ScrollToTop />\n      <Routes />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport { persistReducer, persistStore, FLUSH, PAUSE, PERSIST, PURGE, REGISTER, REHYDRATE } from 'redux-persist'\nimport { combineReducers } from 'redux'\nimport storage from 'redux-persist/lib/storage'\n\n// Slices\nimport userSlice from '../features/user/userSlice'\n\nconst rootReducer = combineReducers({\n  user: userSlice,\n})\n\n// persist config obj\n// whitelist a store attribute using it's reducer name. Whitelisted attributes will persist. (I did not find a way to whitelist specific values)\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage,\n  whitelist: ['user'], //whitelisting a store attribute name, will persist that store attribute.\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  // middleware option needs to be provided for avoiding the error. ref: https://redux-toolkit.js.org/usage/usage-guide#use-with-redux-persist\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n})\n\nexport const persistor = persistStore(store)\nexport default store\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Web3ReactProvider } from '@web3-react/core';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport \"./assets/scss/style.scss\";\nimport Web3 from 'web3';\n\nfunction getLibrary(provider, connector) {\n  return new Web3(provider)\n}\n\nReactDOM.render(\n  <Web3ReactProvider getLibrary={getLibrary}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Web3ReactProvider>,\n  document.getElementById(\"root\"),\n  document.body.classList.add(\"loaded\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}